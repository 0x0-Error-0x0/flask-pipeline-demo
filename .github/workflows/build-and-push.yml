name: Build & Push Image (GHCR)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write   # нужно для push в GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REPO_LOWER: ${{ github.repository_owner }}/flask-pipeline-demo
    outputs:
      image_name: ${{ steps.vars.outputs.name }}
      image_tag:  ${{ steps.vars.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Normalize repo path (lowercase)
        id: vars
        run: |
          echo "name=$(echo '${{ env.REPO_LOWER }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: |
          docker build -t ghcr.io/${{ steps.vars.outputs.name }}:${{ steps.vars.outputs.tag }} \
                       -t ghcr.io/${{ steps.vars.outputs.name }}:latest .

      - name: Push image
        run: |
          docker push ghcr.io/${{ steps.vars.outputs.name }}:${{ steps.vars.outputs.tag }}
          docker push ghcr.io/${{ steps.vars.outputs.name }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy over SSH to VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            set -euxo pipefail
            cd /opt/flask-pipeline-demo
            # логинимся в GHCR встроенным токеном раннера
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker compose pull
            docker compose up -d
            docker image prune -f
